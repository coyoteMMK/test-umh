---
// src/components/TestRenderer.astro
interface Question {
  q: string;
  a: string[];
  answer: number; // 1-based
}

interface Props {
  questions: Question[];
}

const { questions } = Astro.props as Props;
---

<!-- Contador de aciertos y errores -->
<div
  id="counter"
  class="fixed top-4 left-4 z-50
    text-sm sm:text-base
    bg-white/80 shadow-md px-2 py-1 rounded-lg font-sans
    flex flex-col items-center gap-1"
>
  <div class="text-green-700">
    ✔️ <span id="correct-count" class="hidden sm:inline">Correctas: </span><span
      id="correct-num">0</span
    >
  </div>
  <div class="text-red-700">
    ❌ <span id="wrong-count" class="hidden sm:inline">Incorrectas: </span><span
      id="wrong-num">0</span
    >
  </div>
</div>

<!-- Contenedor de todas las preguntas -->
<div id="test-root" class="flex flex-col items-center mt-2 px-4 md:px-0">
  {
    questions.map((item, i) => (
      <section
        class=" w-full max-w-2xl mb-6 px-4 py-3 bg-white shadow-xl border-4 border-black rounded-lg text-sm sm:text-base "
        data-correct={(item.answer - 1).toString()}
      >
        <h2 class="text-lg sm:text-2xl font-bold text-center mb-3">{item.q}</h2>

        <ul class="flex flex-col gap-4 list-none p-0">
          {item.a.map((ans, j) => {
            const emojis = ["😎", "👾", "👽", "👹"];
            return (
              <li
                class="option mx-4 p-3 sm:p-4 rounded-md bg-gray-100 hover:bg-gray-300 cursor-pointer transition-colors flex items-start gap-2"
                data-index={j.toString()}
              >
                <span>{emojis[j % emojis.length]}</span>
                <span>{ans}</span>
              </li>
            );
          })}
        </ul>
      </section>
    ))
  }
</div>

<!-- Colores aplicados dinámicamente -->
<style>
  .correct {
    background-color: #bbf7d0 !important; /* Tailwind: bg-green-100 */
  }
  .wrong {
    background-color: #fecaca !important; /* Tailwind: bg-red-200 */
  }
</style>

<!-- Script de interacción -->
<script type="module">
  const root = document.querySelector("#test-root");
  if (root) {
    let correctCount = 0;
    let wrongCount = 0;
    const correctEl = document.querySelector("#correct-count");
    const wrongEl = document.querySelector("#wrong-count");

    root.querySelectorAll("section").forEach((section) => {
      const correctIdx = Number(section.dataset.correct);
      let answered = false;

      section.querySelectorAll("li").forEach((li) => {
        li.addEventListener("click", () => {
          if (answered) return;
          answered = true;
          const choice = Number(li.dataset.index);
          if (choice === correctIdx) {
            li.classList.add("correct");
            correctCount++;
            correctEl.textContent = String(correctCount);
          } else {
            li.classList.add("wrong");
            wrongCount++;
            wrongEl.textContent = String(wrongCount);
            const correctLi = section.querySelector(
              `li[data-index="${correctIdx}"]`,
            );
            correctLi?.classList.add("correct");
          }
        });
      });
    });
  }
</script>
