---
// src/components/ScoreCounter.astro
interface Props {
  correctAnswers?: number; // Made optional for initial render if managed by client script
  wrongAnswers?: number;   // Made optional
  totalQuestions: number;
  isTestFinished?: boolean; // Made optional
}

// Default values are for the initial server render.
// The client-side script in TestRenderer.astro will take over DOM updates.
const {
  correctAnswers = 0,
  wrongAnswers = 0,
  totalQuestions,
  isTestFinished = false,
} = Astro.props;

// These initial values are primarily for SSR before client script takes over.
let initialCorrect = correctAnswers;
let initialWrong = wrongAnswers;
let initialTotal = totalQuestions;

// The actual display logic (including "Resultado Final") is handled by TestRenderer.astro's script
---

<div id="score-counter-container" class="fixed top-20 sm:top-24 left-0 z-40 p-1 md:p-2">
  <div class="score-card bg-slate-700/80 backdrop-blur-sm text-white shadow-lg rounded-lg p-2 sm:p-3 md:p-4 space-y-1 sm:space-y-2 w-auto">
    <div id="score-correct" class="flex items-center">
      <span class="text-green-400 mr-1 sm:mr-2 text-base sm:text-lg">‚úîÔ∏è</span>
      <span class="hidden md:inline mr-1 text-sm sm:text-base">Correctas:</span>
      <span class="font-bold text-sm sm:text-base">{initialCorrect}</span>
    </div>
    <div id="score-wrong" class="flex items-center">
      <span class="text-red-400 mr-1 sm:mr-2 text-base sm:text-lg">‚ùå</span>
      <span class="hidden md:inline mr-1 text-sm sm:text-base">Fallos:</span>
      <span class="font-bold text-sm sm:text-base">{initialWrong}</span>
    </div>
    <div id="score-total" class="flex items-center">
      <span class="text-sky-400 mr-1 sm:mr-2 text-base sm:text-lg">üéØ</span>
      <span class="hidden md:inline mr-1 text-sm sm:text-base">Total:</span>
      <span class="font-bold text-sm sm:text-base">{initialTotal}</span>
    </div>
    <div id="score-final-percentage" class="text-center font-bold text-amber-400 hidden pt-1 text-sm sm:text-base">
      {/* This will be populated by TestRenderer.astro script when test is finished */}
    </div>
  </div>
</div>

<!-- No <style> tag needed as all styling is done via Tailwind CSS classes -->
